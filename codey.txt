(function (window, z, plugin, $, undefined) {
	if (z && plugin && !plugin.MclPlugin) {
		z.setMembers(plugin, {
			MclPlugin: function () {
				plugin.BasePlugin.apply(this, arguments);
			}
		});

		z.inherit(plugin.BasePlugin, plugin.MclPlugin, {
			name: "mcl",
			$measureType: null,
			$rcmc_1: null,
			render: function () {
				this.$rcmc_1 = $("#rcmc_1").children();
			},
			clearResult: function () {
				hook.mapPlugin.removeGraphics("temp");
				hook.mapPlugin.removeGraphics("selectLayer");
				hook.mapPlugin.removeGraphics("task_point");
				// hook.mapPlugin.clearGraphics();
				$("#rcmc_1").html("");
				$("#rcmc_1").append(this.$rcmc_1);
				hook.mapPlugin.hideInfoTemplate();
				// 清理画图
				$("#measureLi").tooltip('destroy');
				hook.mapPlugin.stopMeasure();
				// 清理135作战圈
				hook.mapPlugin.removeGraphics("battleCircle");
				hook.mapPlugin.removeGraphics("battleCircleGraphics");
				// 清理警卫地点
				hook.mapPlugin.removeGraphics("jjplace");
				// 清理电子围栏
				hook.mapPlugin.removeGraphics("electronicFence");
				hook.mapPlugin.removeGraphics("OffLineAlarm");
				// 清理地图上的图形
				// hook.mapPlugin.clearGraphics();
				$("#layersul input[name='layers']").each(function () {
					var layerNmae = $(this).val();
					var layer = mapPlugin.graphicsLayers[layerNmae];
					if (layer && layer.visible) {
						if (layerNmae == "vedioPointLayer") {
							hook.mapPlugin.removeGraphics("vedioPointLayer");
							layer.hide();
						} else {
							layer.hide();
						}
					}
					if ($(this).prop("checked")) {
						$(this).prop("checked", false);
					}
				});
			},
			setMeasure: function (measureType, dom) {
				var mapPlugin = hook.mapPlugin;
				if (!this.addMeasureEvent) {
					this.addMeasureEvent = true;
					z.addEvent(mapPlugin, "measureStoped", function () {
						hook.hidePopover("#measureLi");
					});
				}
				if (mapPlugin.getMeasureStatus() == measureType) {
					mapPlugin.stopMeasure();
				} else {
					mapPlugin.startMeasure(measureType, null, function (value, unit, evt) {
						hook.showPopover("#measureLi", {
							content: value + " " + unit
						});
					});
					hook.showPopover("#measureLi", {
						content: "点击地图开始测量"
					});
				}
			},
			showTheme: function (node, name, code, jc) {
				var mapPlugin = hook.mapPlugin;
				if (typeof (node) == "string") {
					node = {
						id: arguments[0],
						text: arguments[1],
						attributes: {
							htmlColor: arguments[2],
							markerImgPath: arguments[3],
							markerImgW: arguments[4],
							markerImgH: arguments[5]
						}
					}
				}
				var id = node.id;
				var text = node.text;
				if (!node.attributes) {
					node.attributes = {};
				}
				var htmlColor = node.attributes.htmlColor;
				var markerImgPath = node.attributes.markerImgPath;
				var markerImgW = node.attributes.markerImgW;
				var markerImgH = node.attributes.markerImgH;
				var jb = node.attributes.jb;

				if (id != "" || name != "" || code != "" || jc != "") {

					z.request({
						url: "gis/geometry/datagrid.json?page=1&rows=-1&targetType=&CustomThemeId=" + id + "&name=" + name + "&code=" + code + "&jc=" + jc,
						success: function (datagrid) {
							for (var i = 0, length = datagrid.rows.length; i < length; i++) {
								var data = datagrid.rows[i];
								z.plugin.MclPlugin.instance.addGeometryTypes(node, data, false);
							}
						}
					}, null, false, true);
				}
			},
			showThemeEx: function (targetType) {
				z.request({
					url: "gis/geometry/datagrid.json?page=1&rows=-1&targetTable=" + targetType,
					success: function (datagrid) {
						for (var i = 0, length = datagrid.rows.length; i < length; i++) {
							var data = datagrid.rows[i];
							z.plugin.MclPlugin.instance.addGeometryTypes(null, data, false);
						}
					}
				}, null, false, true);
			},
			showThemeEx2: function (targetType, type, title) {
				z.plugin.MclPlugin.instance.setTitle(title);
				z.request({
					url: "gis/geometry/datagrid.json?page=1&rows=-1&id=" + targetType + "&type=" + type,
					success: function (datagrid) {
						for (var i = 0, length = datagrid.rows.length; i < length; i++) {
							var data = datagrid.rows[i];
							z.plugin.MclPlugin.instance.addGeometryTypes(null, data, false);
							var targetId = data.id;
							z.request({
								url: "gis/geometry/datagrid.json?page=1&rows=-1&targetType=&jwyxId=" + targetId,
								success: function (datagridChild) {
									for (var i = 0, length = datagridChild.rows.length; i < length; i++) {
										var dataChild = datagridChild.rows[i];
										z.plugin.MclPlugin.instance.addGeometryTypes(null, dataChild, false);
									}
								}
							}, null, false, true);
						}
					}
				}, null, false, true);
			},// 加点
			addGeometryTypes: function (node, data, center) {
				var text = "";
				var htmlColor = "";
				var id = "";
				var markerImgPath = "";
				var markerImgW = ""
				var markerImgH = "";
				if (node != null) {
					text = node.text;
					// id = node.id;
					htmlColor = node.attributes.htmlColor;
					markerImgPath = node.attributes.markerImgPath;
					markerImgW = node.attributes.markerImgW;
					markerImgH = node.attributes.markerImgH;
					if (!node.attributes) {
						node.attributes = {};
					}
				} else {
					text = "temp";
				}

				var g = null;
				if (!data.x || !data.y) {
					return

				}
				if (data.dataX && data.dataY) { // 图片偏移，dataX，dataY存在使用偏移后的x，y,保证经度纬度与数据库一致
					var geoPoint = new esri.geometry.Point(data.dataX, data.dataY);
				} else {
					var geoPoint = new esri.geometry.Point(data.x, data.y);
				}
				if (center && (data.x != "" && data.x != null && data.y != "" && data.y != null)) {
					mapPlugin.setCenter(geoPoint, 12);
					// mapPlugin.setZoom(14);
				}
				if (data.geoType == "polyline") {
					var polyline = new esri.geometry.Polyline(z.json.getObject(data.geoJson));
					if (data.enabled == true && data.xtbm != null) {
						g = mapPlugin.addPolyline(text, polyline, {
							style: data.xtbm.lineType || "esriSLSSolid",
							width: data.xtbm.lineWidth,
							color: new esri.Color(data.xtbm.lineColor ? data.xtbm.lineColor : "#ff0000")
						});
					} else {
						g = mapPlugin.addPolyline(text, polyline, {
							style: data.lineType || "esriSLSSolid",
							width: data.lineWidth,
							color: new esri.Color(data.lineColor ? data.lineColor : "#ff0000")
						});
					}
				} else if (data.geoType == "polygon") {
					if (data.enabled == true && data.xtbm != null) {
						var polygon = new esri.geometry.Polygon(z.json.getObject(data.geoJson));
						if (data.xtbm.fillColor == null) {
							data.xtbm.fillColor = htmlColor;
						}
						var fillColor = new esri.Color(data.xtbm.fillColor ? data.xtbm.fillColor : "#ff0000");

						fillColor.a = data.xtbm.fillA;
						var txt = text;
						if (data.targetTable == "Zfcl" || data.targetTable == "Zfab" || data.targetTable == "Cgab") {
							txt += "polygon";
						}
						g = mapPlugin.addPolygon(txt, polygon, {
							style: "esriSFSSolid",
							color: fillColor,
							outline: {
								style: data.xtbm.lineType || "esriSLSSolid",
								width: data.xtbm.lineWidth,
								color: new esri.Color(data.xtbm.lineColor ? data.xtbm.lineColor : "#ff0000")
							}
						});
					} else {
						var polygon = new esri.geometry.Polygon(z.json.getObject(data.geoJson));
						if (data.fillColor == null) {
							data.fillColor = htmlColor;
						}
						var fillColor = new esri.Color(data.fillColor ? data.fillColor : "#ff0000");

						fillColor.a = data.fillA;
						g = mapPlugin.addPolygon(text, polygon, {
							style: "esriSFSSolid",
							color: fillColor,
							outline: {
								style: data.lineType || "esriSLSSolid",
								width: data.lineWidth,
								color: new esri.Color(data.lineColor ? data.lineColor : "#ff0000")
							}
						});
					}
					if (data.targetTable == "Zfcl" || data.targetTable == "Zfab" || data.targetTable == "Cgab") { // 三类面显示详情
						if (data.enabled == true && data.xtbm != null) {
							var py = z.plugin.MclPlugin.instance.tpwz(data.xtbm.tbpy, data.xtbm.width, data.xtbm.height);
							var pyx = py["pyx"];
							var pyy = py["pyy"];
							g = mapPlugin.addPoint(text, geoPoint, {
								color: new esri.Color(data.xtbm.fillColor ? data.xtbm.fillColor : "#ff0000"),
								url: data.xtbm.markerImgPath,
								height: data.xtbm.height,
								width: data.xtbm.width,
								angle: (data.tbjd != null && data.tbjd != "" ? data.tbjd : "0"),
								xoffset: pyx,
								yoffset: pyy
							});
						} else {
							g = mapPlugin.addPoint(text, geoPoint, {
								color: new esri.Color(htmlColor ? htmlColor : "#ff0000"),
								url: markerImgPath,
								height: markerImgW,
								width: markerImgH,
								angle: 0,
								xoffset: 0,
								yoffset: 0
							});
						}
					} else { // 其他面显示标题
						if (data.enabled == true && data.xtbm != null) {
							var py = z.plugin.MclPlugin.instance.tpwz(data.xtbm.tbpy, data.xtbm.width, data.xtbm.height);
							var pyx = py["pyx"];
							var pyy = py["pyy"];
							g = mapPlugin.addText(text, geoPoint, {
								color: new esri.Color(data.xtbm.fillColor ? "#000000" : "#000000"),
								url: data.xtbm.markerImgPath,
								height: data.xtbm.height,
								width: data.xtbm.width,
								angle: (data.tbjd != null && data.tbjd != "" ? data.tbjd : "0"),
								xoffset: pyx,
								yoffset: pyy,
								text: data.name,
								font: new esri.symbol.Font("12px", esri.symbol.Font.STYLE_NORMAL, esri.symbol.Font.VARIANT_NORMAL, esri.symbol.Font.WEIGHT_BOLDER)
							});
						} else {
							g = mapPlugin.addText(text, geoPoint, {
								color: new esri.Color(htmlColor ? htmlColor : "#ff0000"),
								url: markerImgPath,
								height: markerImgW,
								width: markerImgH,
								angle: 0,
								xoffset: 0,
								yoffset: 0,
								text: data.name,
								font: new esri.symbol.Font("10px", esri.symbol.Font.STYLE_NORMAL, esri.symbol.Font.VARIANT_NORMAL, esri.symbol.Font.WEIGHT_BOLDER)

							});
						}
					}
				} else {
					// var geoPoint = z.json.getObject(data.geoJson);

					if (data.enabled == true && data.xtbm != null) {
						var py = z.plugin.MclPlugin.instance.tpwz(data.xtbm.tbpy, data.xtbm.width, data.xtbm.height);
						var pyx = py["pyx"];
						var pyy = py["pyy"];
						g = mapPlugin.addPoint(text, geoPoint, {
							color: new esri.Color(htmlColor ? htmlColor : "#ff0000"),
							url: data.xtbm.markerImgPath,
							height: data.xtbm.height,
							width: data.xtbm.width,
							angle: (data.tbjd != null && data.tbjd != "" ? data.tbjd : "0"),
							xoffset: pyx,
							yoffset: pyy
						});
					} else {
						g = mapPlugin.addPoint(text, geoPoint, {
							color: new esri.Color(htmlColor ? htmlColor : "#ff0000"),
							url: markerImgPath,
							height: markerImgW,
							width: markerImgH,
							angle: 0,
							xoffset: 0,
							yoffset: 0
						});

						// 加载点的标题(警情除外)text == "interphone" || text == "vedioPointLayer"
						if (text == "interphone") {
							var titleText = mapPlugin.addText(text, geoPoint, {
								color: new esri.Color(htmlColor ? htmlColor : "red"),
								text: data.name,
								angle: 0,
								xoffset: 0,
								yoffset: 18,
								font: new esri.symbol.Font("12px", esri.symbol.Font.STYLE_NORMAL, esri.symbol.Font.VARIANT_NORMAL, esri.symbol.Font.WEIGHT_BOLDER)
							});
							titleText.textId = data.id;
							titleText.themeName = text;
						}
					}
				}
				g.id = id + data.id;
				g.unitInfoId = data.targetId;
				g.themeName = text;
				g.lon = data.x;
				g.lat = data.y;
				g.type = data.type;
				g.code = data.code;
				g.monitorBrandCode = data.monitorBrandCode;
				g.name = data.name;
				g.hpgId = data.hpgId;

				if (data.targetTable == "Xfs") {
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", "消防栓&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						z.request({
							url: "wjxf/xfs/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "";
									content = "<table style='width:256px;'><tr><th>编号</th><td>" + unitInfo.name + "</td></tr><tr><th>地址</th><td>" + unitInfo.dlwz + "</td></tr></table>" + "<div><a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','" + data.targetTable + "')\">查看详情</a></div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, null, false, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "Zdll") {
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", "中队名称&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						z.request({
							url: "wjxf/zdll/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "";
									content = "<table style='width:256px;'><tr><th>中队名称</th><td>" + unitInfo.name + "</td></tr><tr><th>执勤车辆统计</th><td>" + unitInfo.zqcltj + "</td></tr><tr><th>执勤人员统计</th><td>" + unitInfo.zqrytj + "</td></tr></table>" + "<div><a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','" + data.targetTable + "')\">查看详情</a></div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, null, false, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "Zfcl") {
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", "驻防车辆&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						z.request({
							url: "wjxf/xfc/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "";
									content = "<table style='width:256px;'><tr><th>名称</th><td>" + unitInfo.name + "</td></tr><tr><th>车辆型号</th><td>" + unitInfo.cllx + "</td></tr></table>" + "<div><a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','" + data.targetTable + "')\">查看详情</a></div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, null, false, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "Xfc") {
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", "消防车&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						z.request({
							url: "wjxf/xfc/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "";
									content = "<table style='width:256px;'><tr><th>名称</th><td>" + unitInfo.name + "</td></tr><tr><th>车辆型号</th><td>" + unitInfo.cllx + "</td></tr></table>" + "<div><a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','" + data.targetTable + "')\">查看详情</a></div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, null, false, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "Zhb") {
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", "指挥部&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						z.request({
							url: "wjxf/abtd/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "";
									content = "<table style='width:256px;'><tr><th>名称</th><td>" + unitInfo.name + "</td></tr><tr><th>地址</th><td>" + unitInfo.dlwz + "</td></tr></table>" + "<div><a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','" + data.targetTable + "')\">查看详情</a></div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, null, false, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "Cgab") {
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", "场馆团队&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						z.request({
							url: "wjxf/abtd/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "";
									content = "<table style='width:256px;'><tr><th>团队名称</th><td>" + unitInfo.name + "</td></tr><tr><th>场馆名称</th><td>" + unitInfo.xfcgName + "</td></tr><tr><th>安保实力统计</th><td>" + unitInfo.sltj + "</td></tr></table>" + "<div><a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','" + data.targetTable + "')\">查看详情</a></div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, null, false, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "Zfab") {
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", "驻防团队&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						z.request({
							url: "wjxf/abtd/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "";
									content = "<table style='width:256px;'><tr><th>团队名称</th><td>" + unitInfo.name + "</td></tr><tr><th>安保实力统计</th><td>" + unitInfo.sltj + "</td></tr></table>" + "<div><a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','" + data.targetTable + "')\">查看详情</a></div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, null, false, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "Jdll") {
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", "机动力量&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						z.request({
							url: "wjxf/abtd/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "";
									content = "<table style='width:256px;'><tr><th>指挥长</th><td>" + unitInfo.name + "</td></tr><tr><th>地址</th><td>" + unitInfo.dlwz + "</td></tr></table>" + "<div><a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','" + data.targetTable + "')\">查看详情</a></div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, null, false, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "Shcs") {
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", "涉会场所&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						// var gr = evt.target.features[0];
						z.request({
							url: "wjxf/xfcg/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "";
									content = "<table style='width:256px;'><tr><th>名称</th><td>" + unitInfo.name + "</td></tr><tr><th>地址</th><td>" + unitInfo.dlwz + "</td></tr><tr><th>所属安保圈</th><td>" + unitInfo.xqbjName + "</td></tr></table><div>";
									content += "<a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','" + data.targetTable + "')\">查看详情</a> | ";
									content += "<a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','ksczfa')\">1.3分钟快速处置方案</a> | ";
									content += "<a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','cgszhya')\">5.10分钟数字化预案</a> | ";
									// content += "<a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId +"','cgabtd')\">场馆安保团队</a> | " ;
									content += "<a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','zfabtd')\">驻防安保团队</a>"
									content += "</div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, null, false, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "Zddw") {
					var title = "";
					if (data.targetTable == "Zddw") {
						title = "重点单位";
					}

					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", title + "&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						// var gr = evt.target.features[0];
						z.request({
							url: "wjxf/xfcg/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "";
									content = "<table style='width:256px;'><tr><th>名称</th><td>" + unitInfo.name + "</td></tr><tr><th>地址</th><td>" + unitInfo.dlwz + "</td></tr></table><div>";
									content += "<a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','szhya')\">数字化预案</a>";
									content += "</div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, null, false, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "Ybdw" || data.targetTable == "Jmxq") {
					var title = "";
					if (data.targetTable == "Ybdw") {
						title = "一般单位";
					} else if (data.targetTable == "Jmxq") {
						title = "居民小区";
					}

					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", title + "&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						// var gr = evt.target.features[0];
						z.request({
							url: "wjxf/xfcg/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "";
									content = "<table style='width:256px;'><tr><th>名称</th><td>" + unitInfo.name + "</td></tr><tr><th>地址</th><td>" + unitInfo.dlwz + "</td></tr></table><div>";
									content += "<a href='#' title='' class='tolh' onclick = \"z.plugin.MclPlugin.instance.viewmapinfo('" + gr.unitInfoId + "','zzxxk')\">作战信息卡</a>";
									content += "</div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, null, false, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "sj") {
					var title = "事件信息";
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", title + "&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						// var gr = evt.target.features[0];
						z.request({
							url: window.WEB_ROOT_PATH + "/cers/eventsmanage/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "<table style='width:256px;'>" + "<tr><th>事件名称</th><td>" + (unitInfo.name ? unitInfo.name : "") + "</td></tr>" + "<tr><th>事件级别</th><td>" + (unitInfo.gradeName ? unitInfo.gradeName : "") + "</td></tr>" + "<tr><th>事件类别</th><td>" + (unitInfo.eventTypeName ? unitInfo.eventTypeName : "") + "</td></tr>"
									/*
									 * +"<tr><th>发生地点</th><td>" + unitInfo.occurrenceDate + "</td></tr>" +"<tr><th>事件内容</th><td>" + unitInfo.content + "</td></tr>"
									 */
									+ "</table><div>";
									content += "<a href=\"javascript:void(0)\" onclick=\"javascript:zMclPlugin.showViewDialog('eventView','" + gr.unitInfoId + "')\" title='' class='tolh' >事件详情</a>";
									content += "</div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "jjd") {
					var title = "警情";
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", title + "&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						// var gr = evt.target.features[0];
						/*
						 * z.request({ url: window.WEB_ROOT_PATH + "/caseinfo/jjd/get.json?id=" + gr.unitInfoId, success: function (args) { if (args.isSuccess) { var unitInfo = args.data; var content = "<table style='width:256px;'>" +"<tr><th>案发地点</th><td>" + (unitInfo.entity.afdd?unitInfo.entity.afdd:"") + "</td></tr>" +"<tr><th>报警时间</th><td>" + (unitInfo.entity.bjsj?unitInfo.entity.bjsj:"") + "</td></tr>" +"<tr><th>接警单位</th><td>" + (unitInfo.entity.jjdwmc?unitInfo.entity.jjdwmc:"") + "</td></tr>" +"<tr><th>案发时间</th><td>" + (unitInfo.entity.occurrenceDate?unitInfo.entity.occurrenceDate:"") + "</td></tr>" +"<tr><th>事件内容</th><td>" + (unitInfo.entity.content?unitInfo.entity.content:"") + "</td></tr>" +"</table><div>"; content += "<a href=\"javascript:void(0)\" onclick=\"javascript:zMclPlugin.showViewDialog('jjdView','"+gr.unitInfoId+"')\" title='' class='tolh' >警情详情</a>" ; content += "</div>"; $("#d" + gr.id).html(content); } } }, true);
						 */
						var content = "<table style='width:256px;'>" + "<tr><th>案发地点</th><td>" + (data.afdd ? data.afdd : "") + "</td></tr>" + "<tr><th>报警时间</th><td>" + (data.bjsj ? data.bjsj : "") + "</td></tr>" + "<tr><th>接警单位</th><td>" + (data.jjdwmc ? data.jjdwmc : "") + "</td></tr>" + "<tr><th>案发时间</th><td>" + (data.occurrenceDate ? data.occurrenceDate : "") + "</td></tr>" + "<tr><th>事件内容</th><td>" + (data.content ? data.content : "") + "</td></tr>" + "</table><div>";
						content += "<a href=\"javascript:void(0)\" onclick=\"javascript:zMclPlugin.showViewDialog('jjdView','" + gr.unitInfoId + "')\" title='' class='tolh' >警情详情</a>";
						content += "<a style='display:inline-block; margin-left:10px;' href='javascript:void(0)' onclick='zMapComPlugin.vedioView("+ data.x + ","+data.y +")' title='' class='tolh' >视频监控</a>";
						content += "</div>";
						$("#d" + gr.id).html(content);
					});

					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "emergency") {
					var title = "应急资源库";
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", title + "&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						// var gr = evt.target.features[0];
						z.request({
							url: window.WEB_ROOT_PATH + "/cers/emergency/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "<table style='width:256px;'>" + "<tr><th>类别</th><td>" + (unitInfo.emergencyCategoryName ? unitInfo.emergencyCategoryName : "") + "</td></tr>"
									/*
									 * +"<tr><th>发生地点</th><td>" + unitInfo.occurrenceDate + "</td></tr>" +"<tr><th>事件内容</th><td>" + unitInfo.content + "</td></tr>"
									 */
									+ "</table><div>";
									content += "<a href=\"javascript:void(0)\" onclick=\"javascript:zMclPlugin.showViewDialog('emergencyView','" + gr.unitInfoId + "')\" title='' class='tolh' >应急资源详情</a>";
									content += "</div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "expertInfo") {
					var title = "专家库";
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", title + "&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						// var gr = evt.target.features[0];
						z.request({
							url: window.WEB_ROOT_PATH + "/cers/expertInfo/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "<table style='width:256px;'>" + "<tr><th>姓名</th><td>" + (unitInfo.name ? unitInfo.name : "") + "</td></tr>" + "<tr><th>单位</th><td>" + (unitInfo.company ? unitInfo.company : "") + "</td></tr>" + "<tr><th>电话</th><td>" + (unitInfo.mobilePhone ? unitInfo.mobilePhone : "") + "</td></tr>" + "</table><div>";
									content += "<a href=\"javascript:void(0)\" onclick=\"javascript:zMclPlugin.showViewDialog('expertInfoView','" + gr.unitInfoId + "')\" title='' class='tolh'>专家详情</a>";
									content += "</div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "team") {
					var title = "专业队伍库";
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", title + "&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						// var gr = evt.target.features[0];
						z.request({
							url: window.WEB_ROOT_PATH + "/cers/team/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "<table style='width:256px;'>" + "<tr><th>名称</th><td>" + (unitInfo.name ? unitInfo.name : "") + "</td></tr>" + "<tr><th>负责人</th><td>" + (unitInfo.leader ? unitInfo.leader : "") + "</td></tr>" + "<tr><th>电话</th><td>" + (unitInfo.telephone ? unitInfo.telephone : "") + "</td></tr>" + "</table><div>";
									content += "<a href=\"javascript:void(0)\" onclick=\"javascript:zMclPlugin.showViewDialog('teamView','" + gr.unitInfoId + "')\" title='' class='tolh'>专业队伍详情</a>";
									content += "</div>";
									$("#d" + gr.id).html(content);
								}
							}
						}, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "trackobject") {
					var title = "联动力量";
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", title + "&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						if (window.zMapElementParse && zMapElementParse.pointStatus) {
							zMapElementParse.task_view([
								gr
							]);
							zMapElementParse.pointStatus = false;
						}

						// 判断是人还是车
						if (gr.type.toLowerCase() == "peoples") { // 人
							z.request({
								url: window.WEB_ROOT_PATH + "/gps/peoples/get.json?id=" + gr.unitInfoId,
								success: function (args) {
									if (args.isSuccess) {
										var unitInfo = args.data;
										var status = "空闲";
										if (gr.attributes.status) {
											if (gr.attributes.status.indexOf("1") > -1 || gr.attributes.status == "moving") {
												status = "赶赴中";
											} else if (gr.attributes.status.indexOf("2") > -1 || gr.attributes.status == "arrived") {
												status = "处置中";
											} else if (gr.attributes.status == "offline") {
												status = "下线";
											}
										}
										var content = "<table style='width:256px;'>" + "<tr><th>单位</th><td>" + (unitInfo.organization ? unitInfo.organization.name : "") + "</td></tr>" + "<tr><th>姓名</th><td>" + (unitInfo.name ? unitInfo.name : "") + "</td></tr>" + "<tr><th>电话</th><td>" + (unitInfo.mobile ? unitInfo.mobile : "") + "</td></tr>" + "<tr><th>状态</th><td>" + status + "</td></tr>" + "</table><div>";
										// content += "<a href=\"javascript:void(0)\" onclick=\"javascript:window.open('"+window.WEB_ROOT_PATH+"/cers/index.do#zTeamPlugin|view|"+gr.unitInfoId+"','_blank')\" title='' class='tolh'>专业队伍详情</a>" ;
										content += "</div>";
										$("#d" + gr.id).html(content);
									}
								}
							}, true);
						} else if (gr.type.toLowerCase() == "vehicle") {// 车
							z.request({
								url: window.WEB_ROOT_PATH + "/gps/vehicle/get.json?id=" + gr.unitInfoId,
								success: function (args) {
									if (args.isSuccess) {
										var unitInfo = args.data;
										var status = "空闲";
										if (gr.attributes.status) {
											if (gr.attributes.status.indexOf("1") > -1 || gr.attributes.status == "moving") {
												status = "赶赴中";
											} else if (gr.attributes.status.indexOf("2") > -1 || gr.attributes.status == "arrived") {
												status = "处置中";
											} else if (gr.attributes.status == "offline") {
												status = "下线";
											}
										}
										var content = "<table style='width:256px;'>" + "<tr><th>单位</th><td>" + (unitInfo.organization ? unitInfo.organization.name : "") + "</td></tr>" + "<tr><th>驾驶员</th><td>" + (unitInfo.driverName ? unitInfo.driverName : "") + "</td></tr>" + "<tr><th>车辆编号</th><td>" + (unitInfo.vehicleCode ? unitInfo.vehicleCode : "") + "</td></tr>" + "<tr><th>状态</th><td>" + status + "</td></tr>" + "</table><div>";
										// content += "<a href=\"javascript:void(0)\" onclick=\"javascript:window.open('"+window.WEB_ROOT_PATH+"/cers/index.do#zTeamPlugin|view|"+gr.unitInfoId+"','_blank')\" title='' class='tolh'>专业队伍详情</a>" ;
										content += "</div>";
										$("#d" + gr.id).html(content);
									}
								}
							}, true);
						}
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "trajectoryBackTest") {
					var title = data.name ? data.name : "";
					mapPlugin.setInfoTemplate(g, "<div id='w" + g.id + "'></div>", "轨迹&nbsp;-&nbsp;" + title, 320, 128, function (evt, gr) {
						var content = "<table style='width:256px;'><tr><th>名字</th><td>" + title + "</td></tr><tr><th>经度</th><td>" + g.lon + "</td></tr><tr><th>纬度</th><td>" + g.lat + "</td></tr></table>";
						content += "<div><a href='#' title='' class='tolh' onclick = \"zMapComPlugin.trajectoryBack('" + g.id + "')\">轨迹回放</a></div>";
						$("#w" + g.id).html(content);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "vedio") {
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", "监控&nbsp;-&nbsp;" + data.name, 320, 128, function (evt, gr) {
						z.request({
							url: window.WEB_ROOT_PATH + "/vedio/channel/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var token = unitInfo.code;
									var brand = unitInfo.monitorBrandCode.replace("channel-brand-", "");
									var monitoringbrand = brand == "hk" ? "海康" : (brand == "ys" ? "宇视" : "");
									var content = "<table style='width:256px;'><tr><th>编号</th><td>" + token + "</td></tr><tr><th>名称</th><td>" + unitInfo.name + "</td></tr><tr><th>经度</th><td>" + unitInfo.lon + "</td></tr><tr><th>纬度</th><td>" + unitInfo.lat + "</td></tr><tr><th>状态</th><td>" + unitInfo.status + "</td></tr><tr><th>品牌</th><td>" + monitoringbrand + "</td></tr></table>";

									$("#d" + gr.id).html(content);
								}
							}
						}, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				} else if (data.targetTable == "interphone") {
					var WalkieName = data.name ? data.name : "";
					mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", "对讲机&nbsp;-&nbsp;" + WalkieName, 320, 128, function (evt, gr) {
						z.request({
							url: window.WEB_ROOT_PATH + "/gps/patrolPerson/get.json?id=" + gr.unitInfoId,
							success: function (args) {
								if (args.isSuccess) {
									var unitInfo = args.data;
									var content = "<table style='width:256px;'><tr><th>持有人</th><td>" + WalkieName + "</td></tr><tr><th>经度</th><td>" + unitInfo.lon + "</td></tr><tr><th>纬度</th><td>" + unitInfo.lat + "</td></tr></table>";
									$("#d" + gr.id).html(content);
								}
							}
						}, true);
					});
					$(".maximize").hide();
					$(".actionsPane").hide();
				}
				// mapPlugin.setLayerMinVisible(text,jb);
				return g;
			},
			clusterInfoTemplate: function (type) {
				if (type == "jjd") {
					var title = "警情信息";
					var content = "<table style='width:256px;'>" + "<tr><th>案发地点</th><td>${afdd}</td></tr>" + "<tr><th>报警时间</th><td>${bjsj}</td></tr>" + "<tr><th>接警单位</th><td>${jjdwmc}</td></tr>" + "<tr><th>案发时间</th><td>${occurrenceDate}</td></tr>" + "<tr><th>事件内容</th><td>${content}</td></tr>" + "</table><div>";
					content += "<a href=\"javascript:void(0)\" onclick=\"javascript:zMclPlugin.showViewDialog('jjdView','${id}')\" title='' class='tolh' >警情详情</a>";
					content += "</div>";
					return {
						"singleTemplate": new esri.InfoTemplate(title + "&nbsp;&nbsp;", "<div id='c${id}'>" + content + "</div>")
					}
				} else {
					return {};
				}
			},
			jqjbxxMis: function () {
				var $this = this;
				var JqjbxxPlugin = z.plugin.JqjbxxPlugin.instance;
				$this.hook.activeMisPlugin(JqjbxxPlugin);
				/*
				 * url = "wjxf/jqjbxx/page.do"; z.request({ url: url, dataType: "html", success: function (html) { $("#jqgl_page").dialog({ autoOpen: false, height: 500, width: 800, modal: true, title: "警情管理", close: function () { $(this).empty(); } }); $("#jqgl_page").dialog("open"); z.plugin.JqjbxxPlugin.instance.pageDom = $(html).get(0); $("#jqgl_page").html("").append(z.plugin.JqjbxxPlugin.instance.pageDom); z.plugin.JqjbxxPlugin.instance.parse(); z.plugin.JqjbxxPlugin.instance.$parentPanel = $("#jqgl_page"); } });
				 */
			},
			viewmapinfo: function (id, targetTable) {
				var $this = this;
				if (targetTable == "Xfs") {
					if (!z.plugin.XfsPlugin2.instance.pageDom) {
						z.plugin.XfsPlugin2.instance.pageDom = $("#xfs_view");
						z.plugin.XfsPlugin2.instance.parse();
					}
					z.plugin.XfsPlugin2.instance.showView(id);
				}
				if (targetTable == "Zdll") {
					if (!z.plugin.ZdllPlugin2.instance.pageDom) {
						z.plugin.ZdllPlugin2.instance.pageDom = $("#zdll_view");
						z.plugin.ZdllPlugin2.instance.parse();
					}
					z.plugin.ZdllPlugin2.instance.showView(id);
				} else if (targetTable == "Xfc") {
					if (!z.plugin.XfcPlugin2.instance.pageDom) {
						z.plugin.XfcPlugin2.instance.pageDom = $("#xfc_view");
						z.plugin.XfcPlugin2.instance.parse();
					}
					z.plugin.XfcPlugin2.instance.showView(id);
				} else if (targetTable == "Zfcl") {
					if (!z.plugin.ZfclPlugin2.instance.pageDom) {
						z.plugin.ZfclPlugin2.instance.pageDom = $("#xfc_view");
						z.plugin.ZfclPlugin2.instance.parse();
					}
					z.plugin.ZfclPlugin2.instance.showView(id);
				} else if (targetTable == "Zhb") {
					if (!z.plugin.ZhbPlugin2.instance.pageDom) {
						z.plugin.ZhbPlugin2.instance.pageDom = $("#zhb_view");
						z.plugin.ZhbPlugin2.instance.parse();
					}
					z.plugin.ZhbPlugin2.instance.showView(id);
				} else if (targetTable == "Zfab") {
					if (!z.plugin.ZfabPlugin2.instance.pageDom) {
						z.plugin.ZfabPlugin2.instance.pageDom = $("#zfab_view");
						z.plugin.ZfabPlugin2.instance.parse();
					}
					z.plugin.ZfabPlugin2.instance.showView(id);
				} else if (targetTable == "Cgab") {
					if (!z.plugin.CgabPlugin2.instance.pageDom) {
						z.plugin.CgabPlugin2.instance.pageDom = $("#cgab_view");
						z.plugin.CgabPlugin2.instance.parse();
					}
					z.plugin.CgabPlugin2.instance.showView(id);
				} else if (targetTable == "Jdll") {
					if (!z.plugin.JdllPlugin2.instance.pageDom) {
						z.plugin.JdllPlugin2.instance.pageDom = $("#jdll_view");
						z.plugin.JdllPlugin2.instance.parse();
					}
					z.plugin.JdllPlugin2.instance.showView(id);
				} else if (targetTable == "Shcs" || targetTable == "Zddw" || targetTable == "Ybdw" || targetTable == "Jmxq") {
					if (!z.plugin.XfcgPlugin2.instance.pageDom) {
						z.plugin.XfcgPlugin2.instance.pageDom = $("#xfcg_view");
						z.plugin.XfcgPlugin2.instance.parse();
					}
					z.plugin.XfcgPlugin2.instance.showView(id);
				} else if (targetTable == "ksczfa" || targetTable == "cgszhya" || targetTable == "szhya" || targetTable == "zzxxk") {
					var Title = "";
					if (targetTable == "ksczfa") {
						Title = "1.3分钟快速处置方案";
					} else if (targetTable == "cgszhya") {
						Title = "5.10分钟数字化预案";
					} else if (targetTable == "szhya") {
						Title = "数字化预案";
					} else if (targetTable == "zzxxk") {
						Title = "作战信息卡";
					}
					var $this = this;
					var str = id;
					url = "wjxf/doc/viewDoc.do?xfcgid=" + str + "&type=" + targetTable;
					this.xfcgId = str;
					z.request({
						url: url,
						dataType: "html",
						success: function (html) {
							$("#dlsyqk_view").dialog({
								autoOpen: false,
								height: 500,
								width: 800,
								modal: true,
								title: Title,
								close: function () {
									$(this).empty();
								}
							});
							$("#dlsyqk_view").dialog("open");
							z.plugin.DocPlugin.instance.pageDom = $(html).get(0);
							$("#dlsyqk_view").html("").append(z.plugin.DocPlugin.instance.pageDom);
							z.plugin.DocPlugin.instance.parse();
						}
					});
				} else if (targetTable == "cgabtd" || targetTable == "zfabtd") {
					var Title = "";
					var _targetTable = targetTable;
					if (targetTable == "cgabtd") {
						Title = "场馆安保团队";
						_targetTable = "Cgab"
					} else if (targetTable == "zfabtd") {
						Title = "安防安保团队";
						_targetTable = "Zfab"
					}
					var $this = this;
					var str = id;
					this.xfcgId = str;
					z.request({
						url: "wjxf/abtd/getEx.json?xfcgId=" + str + "&type=" + _targetTable,
						success: function (args) {
							if (args.isSuccess) {
								var unitInfo = args.data;
								if (_targetTable == "Zfab") {
									if (!z.plugin.ZfabPlugin2.instance.pageDom) {
										z.plugin.ZfabPlugin2.instance.pageDom = $("#zfab_view");
										z.plugin.ZfabPlugin2.instance.parse();
									}
									z.plugin.ZfabPlugin2.instance.showView(unitInfo.id);
								} else if (_targetTable == "Cgab") {
									if (!z.plugin.CgabPlugin2.instance.pageDom) {
										z.plugin.CgabPlugin2.instance.pageDom = $("#cgab_view");
										z.plugin.CgabPlugin2.instance.parse();
									}
									z.plugin.CgabPlugin2.instance.showView(unitInfo.id);
								}
							}
						}
					});
				}
			},
			seachMeasure: function (measureType, dom, layerNames, callback) { // 框选和圈选
				if (!layerNames) {
					return;
				}
				var $this = this;
				var mapPlugin = hook.mapPlugin;
				if (measureType == "") {
					measureType = "extent";
				}
				this.$measureType = measureType;
				hook.mapPlugin.removeGraphics("selectLayer");
				hook.mapPlugin.removeGraphics("temp");
				hook.mapPlugin.hideInfoTemplate();
				mapPlugin.startDraw(measureType, null, function (evt) {
					var key = $this.hook.mapPlugin.addGeometry("selectLayer", evt.geometry);
					$this.hook.mapPlugin.stopDraw();
					var KuanXuanType = $this.$measureType;
					var pointid = [];
					var pointids = {};
					for (var j = 0; j < layerNames.length; j++) {
						var graphic;
						var layerName = layerNames[j];
						pointid = [];
						if (mapPlugin.graphicsLayers[layerName]) {
							graphic = mapPlugin.graphicsLayers[layerName].graphics;
							if (measureType == "circle") {
								// 圈选
								var centroid = evt.geometry.getCentroid(); // 质心
								for (var i = 0, l = graphic.length; i < l; i++) {
									if (graphic[i] && graphic[i].geometry) {
										if (evt.geometry.contains(graphic[i].geometry)) {
											pointid.push(graphic[i]);
										}
									}
								}
							} else if (measureType == "extent") {
								// 框选
								var Xmin = evt.geometry.getExtent().xmin;
								var Xmax = evt.geometry.getExtent().xmax;
								var Ymin = evt.geometry.getExtent().ymin;
								var Ymax = evt.geometry.getExtent().ymax;
								for (var i = 0, l = graphic.length; i < l; i++) {
									if (graphic[i] && graphic[i].geometry) {
										var x = graphic[i].geometry.x;
										var y = graphic[i].geometry.y;
										if (x > Xmin && x < Xmax && y > Ymin && y < Ymax) {
											pointid.push(graphic[i]);
										}
									}
								}
							} else if (measureType == "point") {
								var Xpoint = evt.geometry.x;
								var Ypoint = evt.geometry.y;
								var imageWidth = 0;
								var imageHeight = 0;
								for (var i = 0, l = graphic.length; i < l; i++) {
									if (graphic[i] && graphic[i].geometry) {
										var x = graphic[i].geometry.x;
										var y = graphic[i].geometry.y;
										// 像素 坐标轴转换
										// var svgwidth=10
										imageWidth = graphic[i].symbol.width;
										imageHeight = graphic[i].symbol.height;
										if (Math.abs(Xpoint - x) * 2 < imageWidth && Math.abs(Ypoint - y) * 2 < imageHeight) {
											pointid.push(graphic[i]);
										}
									}
								}
							}
						}
						if (layerName == "vedioPointLayer" && pointid.length > 0) {
							pointids.vedioPointLayer = pointid;
						}
					}

					if (typeof (callback) == "function") {
						callback(pointids);
					}

					// 
					/*
					 * var $url = "gis/geometry/geometryList.json?KuanXuanType=" + KuanXuanType + "&Xmin=" + Xmin + "&Xmax=" + Xmax + "&Ymin=" + Ymin + "&Ymax=" + Ymax; z.request({ url: $url, dataType: "json", success: function (json) { $this.hook.mapPlugin.drawToolbar.deactivate(); var data = json.rows; if (data != null) { for (var i = 0, len = data.length; i < len; i++) { z.plugin.MclPlugin.instance.addGeometryTypes(null,data[i],false); } } } })
					 */

				});
			},

			moveJjPoint: function (options, circle, _data) {
				var $this = this;
				if (!options.url || !options.name || !options.targetTable) {
					return

				}
				var dOption = {
					x: "x",
					y: "y",
					id: "id",
					name: "name",
					targetId: "id",
					code: "code",
					status: "status", // 添加状态
					alt: "alt",
					// 警情信息模板相关
					afdd: "afdd",
					bjsj: "bjsj",
					jjdwmc: "jjdwmc",
					occurrenceDate: "occurrenceDate",
					content: "content"
				}
				$.extend(true, dOption, options.param);
				z.request({
					url: options.url,
					data: options.data ? options.data : {},
					success: function (data) {
						hook.mapPlugin.removeGraphics("jjdPointLayer");
						if (data && data.rows && data.rows.length) {
							$.each(data.rows, function (i, e) {
								var lon = e.dhdwjd;
								var lat = e.dhdwwd;
								if (lon && lat) {
									var point = new esri.geometry.Point(lon, lat);
									if (circle.contains(point)) {
										if (e[dOption.x] && e[dOption.y]) {
											var node = {};
											node.text = options.name;
											node.attributes = options.marker ? options.marker : {};
											var data = {
												x: e[dOption.x],
												y: e[dOption.y],
												id: e[dOption.id],
												name: e[dOption.name],
												targetTable: options.targetTable,
												targetId: e[dOption.targetId],
												type: e[dOption.type],
												code: e[dOption.code],
												status: e[dOption.status],
												monitorCategoryName: e[dOption.monitorCategoryName],
												angle: e[dOption.alt],

												// 警情信息模板相关
												afdd: e[dOption.afdd],
												bjsj: e[dOption.bjsj],
												jjdwmc: e[dOption.jjdwmc],
												occurrenceDate: e[dOption.occurrenceDate],
												content: e[dOption.content]
											}
											zMapComPlugin.pictureOffset(options.name, data, 1);// 图片偏移
											var g = zMclPlugin.addGeometryTypes(node, data, false);

										}
									}
								}
							});
						}
						if (typeof (success) == "function") {
							success.apply($this, arguments);
						} else if (typeof (options.success) == "function") {
							options.success.apply($this, arguments);
						}
					}
				}, true);
			},
			// 监控加点
			videoPoint: function (options, circle, _data) {
				var dOption = {
					x: "x",
					y: "y",
					id: "id",
					name: "name",
					targetId: "id",
					code: "code",
					monitorBrandCode: "monitorBrandCode",
					status: "status", // 添加状态
					alt: "alt",
				}
				$.extend(true, dOption, options.param);
				z.request({
					url: options.url,
					data: _data,
					success: function (data) {
						hook.mapPlugin.removeGraphics("vedioPointLayer");
						if (data && data.rows && data.rows.length) {
							$.each(data.rows, function (i, e) {
								var lon = e.lon;
								var lat = e.lat;
								if (lon && lat) {
									var point = new esri.geometry.Point(lon, lat);
									if (circle.contains(point)) {
										if (e[dOption.x] && e[dOption.y]) {
											var node = {};
											node.text = options.name;
											node.attributes = options.marker ? options.marker : {};
											var data = {
												x: e[dOption.x],
												y: e[dOption.y],
												id: e[dOption.id],
												name: e[dOption.name],
												targetTable: options.targetTable,
												targetId: e[dOption.targetId],
												type: e[dOption.type],
												code: e[dOption.code],
												monitorBrandCode: e[dOption.monitorBrandCode],
												status: e[dOption.status],
												monitorCategoryName: e[dOption.monitorCategoryName],
												angle: e[dOption.alt],
											}
											zMapComPlugin.pictureOffset(options.name, data, 1);// 图片偏移
											var g = zMclPlugin.addGeometryTypes(node, data, false);

										}
									}
								}
							});
						}
						if (typeof (success) == "function") {
							success.apply($this, arguments);
						} else if (typeof (options.success) == "function") {
							options.success.apply($this, arguments);
						}
					}
				}, true);
			},
			addJjdd: function () {// 点选
				var jwdialog = $("#jwdd");
				// 选中的时间
				var get_time = $("#choose_time option:selected").val();
				var area = $("#area input").val();
				var mapObjClick = mapObj.on("click", clickMap);
				function clickMap (evt) {
					var point = evt.mapPoint;
					var x = point.x;
					var y = point.y;
					// 线样式(线样式 ，线颜色，线宽度)
					var lineSymbol = new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new dojo.Color([
							255, 0, 0
					]), 2);
					// 图形样式（填充样式， 轮廓样式，图形填充色）radius，半径，单位：米
					var symbol = new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID, lineSymbol, new dojo.Color([
							255, 0, 0, 0.2
					]));
					var circle = new esri.geometry.Circle({
						center: [
								x, y
						],
						radius: area
					});
					var graphic = new esri.Graphic(circle, symbol);
					/*
					 * mapPlugin.addGraphic("battleCircle",graphic); // 1 分钟圆样式 mapPlugin.setCenter({"x":x,"y":y},14);// 居中放大
					 */
					gg = mapPlugin.addGraphic("jjplace", graphic);
					mapPlugin.setCenter({
						"x": x,
						"y": y
					});
					mapPlugin.mapObj.setExtent(gg._extent, true);
					var _data = {
						"lonMax": gg._extent.xmax,
						"lonMin": gg._extent.xmin,
						"latMax": gg._extent.ymax,
						"latMin": gg._extent.ymin
					};

					// 定时更新警情
					var jjdLayer = window.layerOptions[1];
					var _thistime = z.date.getString(new Date(), "yyyy-MM-dd HH:mm:ss");
					if (get_time == "half") {
						// jjdLayer.data.endTime = new Date((jjdLayer.data.endTime).getTime() - 0.5 * 60 * 60 * 1000);
						var halfHour = new Date((new Date().getTime()) - 0.5 * 60 * 60 * 1000);
						jjdLayer.data.startTime = z.date.getString(halfHour, "yyyy-MM-dd HH:mm:ss");
						jjdLayer.data.endTime = _thistime;

					} else if (get_time == "one") {
						var oneHour = new Date((new Date().getTime()) - 1 * 60 * 60 * 1000);
						jjdLayer.data.startTime = z.date.getString(oneHour, "yyyy-MM-dd HH:mm:ss");
						jjdLayer.data.endTime = _thistime;
					} else {
						var twoHour = new Date((new Date().getTime()) - 2 * 60 * 60 * 1000);
						jjdLayer.data.startTime = z.date.getString(twoHour, "yyyy-MM-dd HH:mm:ss");
						jjdLayer.data.endTime = _thistime;
					}

					zMclPlugin.moveJjPoint(jjdLayer, circle, _data);
					setInterval(function () {
						var jjdLayer = window.layerOptions[1];
						zMclPlugin.moveJjPoint(jjdLayer, circle, _data);
					}, 30000);

					// 监控加点
					var videoLayer = window.layerOptions[6];
					zMclPlugin.videoPoint(videoLayer, circle, _data);

					/*
					 * z.request({ url : window.WEB_ROOT_PATH + "/vedio/channel/datagrid.json", data:_data, success:function(data){ if (data && data.rows && data.rows.length) { hook.mapPlugin.removeGraphics("vedioPointLayer"); var rows = data.rows; console.log(rows); for (var i=0,l=rows.length;i<l;i++) { var lon = rows[i].lon; var lat = rows[i].lat; // 显示范围内的监控 var point = new esri.geometry.Point(lon, lat); if (circle.contains(point)) { var node = { "text" : "vedioPointLayer", "attributes" : { markerImgPath: window.WEB_ROOT_PATH+"/img/z-qzyj/map/vedio.png", markerImgW : 30, markerImgH : 30 } }; var data = { "id" : rows[i].id, "name" : rows[i].name, "code":rows[i].code, "monitorBrandCode":rows[i].monitorBrandCode, "targetId" : rows[i].id, "targetTable" : "vedio", "x" : lon, "y" : lat, "type" : "vedio" };
					 * 
					 * var g = zMclPlugin.addGeometryTypes(node,data,false);
					 * 
					 * 
					 * zMclPlugin.videoPoint(videoLayer,circle,_data);
					 * 
					 * var node = { "text" : "vedioPointLayer", "attributes" : { markerImgPath: window.WEB_ROOT_PATH+"/img/z-qzyj/map/vedio.png", markerImgW : 30, markerImgH : 30 } };
					 * 
					 * 
					 * var data = { "id" : rows[i].id, "name" : rows[i].name, "code":rows[i].code, "monitorBrandCode":rows[i].monitorBrandCode, "targetId" : rows[i].id, "targetTable" : "vedio", "x" : lon, "y" : lat, "type" : "vedio" };
					 * 
					 * 
					 * zMclPlugin.addGeometryTypes(node,data); } } } } });
					 */

					hook.hidePopover("#measureLi");
					mapObjClick.remove();
				}
				jwdialog.dialog("close");
				/*
				 * jwdialog.find(".z-dialog-sure").click(function(){ });
				 */

			},
			setThemeVisible: function (node, checked) {
				hook.mapPlugin.removeGraphics(node.text);
				hook.mapPlugin.hideInfoTemplate();
				if (node && checked == undefined && this != z.plugin.MclPlugin.instance) {
					$(this).tree("check", node.target);
				}

				if (checked) {
					// z.plugin.MclPlugin.instance.showTheme(node.id, node.text, node.attributes.htmlColor, node.attributes.markerImgPath);
					z.plugin.MclPlugin.instance.showTheme(node, "", "", "");
					/*
					 * z.request({ url: "gis/geometry/datagrid.json?page=1&rows=-1&targetType=" + encodeURIComponent(node.text), success: function (datagrid) { var mapPlugin = hook.mapPlugin; for (var i = 0, length = datagrid.rows.length; i < length; i++) { var item = datagrid.rows[i]; var geoPoint = z.json.getObject(item.geoJson); var g = mapPlugin.addPoint(node.text, geoPoint, { color: new esri.Color(node.attributes.htmlColor ? node.attributes.htmlColor : "#ff0000"), url: node.attributes.markerImgPath, height:16, width:16, angle:0 }); g.id = node.id + item.id; g.unitInfoId = item.targetId; g.themeName = node.text; mapPlugin.setInfoTemplate(g, "<div id='d" + g.id + "'></div>", node.text + "&nbsp;-&nbsp;" + item.name, 320, 128, function (evt) { var gr = evt.target.features[0]; z.request({ url: "wjzj/themeUnitinfo/get.json?id=" + gr.unitInfoId, success: function (args) { if (args.isSuccess) { var unitInfo = args.data; var content = "<table style='width:256px;'><tr><th>名称</th><td>" + unitInfo.name + "</td></tr><tr><th>地址</th><td>" + unitInfo.dzmc + "</td></tr><tr><th>电话</th><td>" + unitInfo.lxdh + "</td></tr><tr><th>专题</th><td>" + unitInfo.themeType + "</td></tr></table>"; $("#d" + gr.id).html(content); } } }); }); } } });
					 */

				}
				z.request({
					url: "wjzj/theme/setDisplay.json?id=" + node.id,
					data: {
						display: checked ? "1" : "0"
					}
				}, null, false, true);
				if (node.children) {
					for (var i = 0, length = node.children.length; i < length; i++) {
						z.plugin.MclPlugin.instance.setThemeVisible(node.children[i], checked)
					}
				}
			},
			setThemeSelect: function (node, checked) {

				if (node && checked == undefined) {
					$(this).tree("check", node.target);
				}

				var mapPlugin = hook.mapPlugin;
				var x = node.attributes.x;// x
				var y = node.attributes.y;
				var jb = node.attributes.jb;

				if (x != "" && x != null && y != "" && y != null && jb != "" && jb != null) {
					var geoPoint = new esri.geometry.Point(x, y);
					mapPlugin.setCenter(geoPoint, jb);
				}

				z.plugin.MclPlugin.instance.setThemeVisible(node, checked);

			},
			showThemeIncludeNode: function (node, name, code, jc, type) {
				var mapPlugin = hook.mapPlugin;
				if (typeof (node) == "string") {
					node = {
						id: arguments[0],
						text: arguments[1],
						attributes: {
							htmlColor: arguments[2],
							markerImgPath: arguments[3],
							markerImgW: arguments[4],
							markerImgH: arguments[5]
						}
					}
				}
				var id = node.id;
				var ids = id.split("&");
				var xqbjid = "";
				var targetId = "";
				var xfcgId = "";
				if (type == "Xqbj") {
					if (ids.length == 3) {
						xqbjid = ids[0]; // 当前辖区id
						id = ids[2]; // 当前辖区图层id
						// targetId = ids[2]; //当前图层id
					} else {
						targetId = id;
						id = "";
					}
				} else if (type == "Theme") {

					if (ids.length == 3) {
						if (ids[0] != "" && ids[1] == " ") {
							targetId = ids[0]; // 当前辖区id
							id = "";
						} else if (ids[0] != "" && ids[1] != " ") {
							if (ids[1] == "######") {
								id = "";
								targetId = "";
								xfcgId = ids[0];
							} else {
								if (ids[2] == "######") {
									id = ids[0];
									// targetId = ids[0];
									xfcgId = ids[1];
								} else {
									id = ids[0];
								}
							}

						}
					}
				}
				var text = node.text;
				if (!node.attributes) {
					node.attributes = {};
				}
				var htmlColor = node.attributes.htmlColor;
				var markerImgPath = node.attributes.markerImgPath;
				var markerImgW = node.attributes.markerImgW;
				var markerImgH = node.attributes.markerImgH;
				var jb = node.attributes.jb;

				if ((id != "" && id != " ") || targetId != "" || xfcgId != "") {
					var center = false;
					if (targetId != "") {
						center = true;
					}
					var uri = "gis/geometry/datagrid.json?page=1&rows=-1&targetType=&CustomThemeId=" + id + "&name=" + name + "&code=" + code + "&jc=" + jc + "&targetId=" + targetId + "&xfcgId=" + xfcgId;
					if (node.text == "消火栓") {
						var ext = hook.mapPlugin.mapObj.extent;
						var xmax = ext.xmax;
						var xmin = ext.xmin;
						var ymax = ext.ymax;
						var ymin = ext.ymin;
						uri = "gis/geometry/datagrid.json?page=1&rows=-1&targetType=&CustomThemeId=" + id + "&name=" + name + "&code=" + code + "&jc=" + jc + "&targetId=" + targetId + "&xfcgId=" + xfcgId + "&xmax=" + xmax + "&xmin=" + xmin + "&ymax=" + ymax + "&ymin=" + ymin;
					}
					z.request({
						url: uri,
						success: function (datagrid) {
							for (var i = 0, length = datagrid.rows.length; i < length; i++) {
								var data = datagrid.rows[i];
								z.plugin.MclPlugin.instance.addGeometryTypes(node, data, center);
								/*
								 * var targetId = data.id; z.request({ url: "gis/geometry/datagrid.json?page=1&rows=-1&targetType=&jwyxId=" +targetId+"&name="+name+"&code="+code+"&jc="+jc, success: function (datagridChild) { for (var i = 0, length = datagridChild.rows.length; i < length; i++) { var dataChild = datagridChild.rows[i]; z.plugin.MclPlugin.instance.addGeometryTypes(node,dataChild,false); } } }, null, false, true);
								 */
							}
						}
					}, null, false, true);
				}
			},
			setThemeVisibleEx: function (node, checked, type) {
				hook.mapPlugin.removeGraphics(node.text);
				hook.mapPlugin.hideInfoTemplate();
				if (node && checked == undefined && this != z.plugin.MclPlugin.instance) {
					$(this).tree("check", node.target);
				}

				if (checked) {
					z.plugin.MclPlugin.instance.showThemeIncludeNode(node, "", "", "", type);
				}
				z.request({
					url: "wjzj/theme/setDisplay.json?id=" + node.id,
					data: {
						display: checked ? "1" : "0"
					}
				}, null, false, true);
				if (node.children) {
					for (var i = 0, length = node.children.length; i < length; i++) {
						z.plugin.MclPlugin.instance.setThemeSelectJwyx(node.children[i], checked)
					}
				}
			},
			setThemeSelectXqbj: function (node, checked) {

				if (node && checked == undefined) {
					$(this).tree("check", node.target);
				}

				var mapPlugin = hook.mapPlugin;
				var x = node.attributes.x;// x
				var y = node.attributes.y;
				var jb = node.attributes.jb;

				if (x != "" && x != null && y != "" && y != null && jb != "" && jb != null) {
					var geoPoint = new esri.geometry.Point(x, y);
					mapPlugin.setCenter(geoPoint, jb);
				}

				z.plugin.MclPlugin.instance.setThemeVisibleEx(node, checked, "Xqbj");

			},
			setThemeSelectJwyx: function (node, checked) {
				// 15级以上才显示消火栓
				if (node.text == "消火栓") {
					var zoom = hook.mapPlugin.getZoom();
					if (zoom < 15) {
						if (checked) {
							$(this).tree("uncheck", node.target);
						}
						var pot = hook.mapPlugin.mapObj.extent.getCenter();
						hook.mapPlugin.mapObj.centerAndZoom(pot, 15);
						return;
					}
				}
				if (node && checked == undefined) {
					$(this).tree("check", node.target);
				}

				var mapPlugin = hook.mapPlugin;
				var x = node.attributes.x;// x
				var y = node.attributes.y;
				var jb = node.attributes.jb;

				if (x != "" && x != null && y != "" && y != null && jb != "" && jb != null) {
					var geoPoint = new esri.geometry.Point(x, y);
					mapPlugin.setCenter(geoPoint, jb);
				}

				z.plugin.MclPlugin.instance.setThemeVisibleEx(node, checked, "Theme");

			},
			pageloads: {
				pageload: function () {
					this.setSearchResult = function (datagrid) {
						var $this = this;
						var html = "<div class='zhzl_mcldata' style='width:100%;height:100%;overflow:hidden;'><h2></h2><div id='data' class='data'>";
						for (var i = 0; i < $this.datagrid.rows.length; i++) {
							if (typeof ($this.itemRender) == "function") {
								html += $this.itemRender($this.datagrid.rows[i], i);
							} else {
								html += "<dl>";
								html += "<i class='iconlocate'>" + String.fromCharCode(65 + index) + "</i>";
								html += "<dt>名称：" + item.name + "</dt>";
								html += "</dl>";
							}
						}
						html += "</div><div class='page'><div class='pagebg'></div></div></div>";
						$this.container.html(html);
						containerResize.apply(this.container, []);
						this.container.resize(containerResize);
						function containerResize () {
							if ($(this).parent().parent().parent().is(".tabs-panels")) {
								$(this).find(".zhzl_mcldata").css("height", $("#rcmc_1").height() - 29 + "px");
							} else {
								$(this).find(".zhzl_mcldata").css("height", $("#rcmc_1").height() + "px");
							}
							$(this).find("#data").css("height", ($(this).find(".zhzl_mcldata").height() - 90) + "px");
						}
						this.container.find("#data dl").each(function (key, value) {
							this.rowIndex = key;
							$(this).click(function () {
								$this.container.find("#data dl").removeClass("current");
								$(this).addClass("current");
								if (typeof ($this.itemClick) == "function") {
									$this.itemClick($this.datagrid.rows[this.rowIndex], this.rowIndex);
								}
							});
						});

						$this.updatePaging();
					}
					this.autoQuest = function (index) {
						var $this = this;
						var uri = z.uri.setValue($this.pagingUrl, "page", index);
						$this.pagingUrl = uri;
						z.request({
							url: uri,
							success: function (args) {
								$this.datagrid = args;
								$this.setSearchResult();
							}
						});
					}

					this.updatePaging = function () {
						this.container.find("div.zhzl_mcldata h2").html("共" + this.datagrid.total + "条记录");
						var pageIndex = parseInt(z.uri.getValue(this.pagingUrl, "page"));
						var itemlength = parseInt(z.uri.getValue(this.pagingUrl, "rows"));
						var pageTotal = parseInt(((this.datagrid.total - 1) / itemlength) + 1);
						var start, end;
						start = Math.max(1, pageIndex - 2);
						end = Math.min(pageTotal, start + 4);

						var strHTML = "";
						if (pageIndex == 1) {
							strHTML += "<a href=\"#\"" + " title= \" \"" + " class=\"pre\"></a>";
						} else {
							strHTML += "<a href=\"javascript:z.plugin.MclPlugin.instance.pageloads." + this.type + ".autoQuest(" + (pageIndex - 1).toString() + ")\"" + " title=\"\"" + " class=\"pre\"></a>";
						}
						strHTML += "<ul id=\"mc\" class=\"mc\">";

						for (var i = start; i <= end; i++) {
							if (i == pageIndex) {
								strHTML += "<li class=\"current\"><a href=\"#\" title=\"\">" + i + "</a></li>";
							} else {
								strHTML += "<li><a href=\"javascript:z.plugin.MclPlugin.instance.pageloads." + this.type + ".autoQuest(" + i.toString() + ")\"" + " title=\"\">" + i.toString() + "</a></li>";
							}
						}

						strHTML += "</ul>";

						if (pageTotal > 1) {
							if (pageIndex != pageTotal) {
								strHTML += "<a href=\"javascript:z.plugin.MclPlugin.instance.pageloads." + this.type + ".autoQuest(" + (pageIndex + 1).toString() + ")\"" + " title=\"\" class=\"next\"></a>"
							} else {
								strHTML += "<a href=\"#\" title=\"\" class=\"next\"></a>";
							}
						}
						this.container.find("div.pagebg").html(strHTML);
					}
				},
				getInstance: function (pageloads, type, options) {
					if (pageloads[type] === undefined) {
						pageloads[type] = new pageloads.pageload();
						$.extend(pageloads[type], options);
					} else {
						$.extend(pageloads[type], options);
					}
					return pageloads[type];
				}
			},
			searchmodel: function (datagrid, pagingUrl, type, itemRender, itemClick, container) {
				var ins = this.pageloads.getInstance(this.pageloads, type, {
					datagrid: datagrid,
					pagingUrl: pagingUrl,
					type: type,
					itemRender: itemRender,
					itemClick: itemClick,
					container: container
				});
				ins.setSearchResult();
			},
			tpwz: function (markerImgPy, markerImgW, markerImgH) {
				var pyx = 0;
				var pyy = 0;
				if (markerImgPy == "1") {
					pyx = markerImgW / 2;
					pyy = (0 - markerImgH / 2);
				} else if (markerImgPy == "2") {
					pyx = 0;
					pyy = (0 - markerImgH / 2);
				} else if (markerImgPy == "3") {
					pyx = (0 - markerImgW / 2);
					pyy = (0 - markerImgH / 2);
				} else if (markerImgPy == "4") {
					pyx = markerImgW / 2;
					pyy = 0;
				} else if (markerImgPy == "5") {
					pyx = 0;
					pyy = 0;
				} else if (markerImgPy == "6") {
					pyx = (0 - markerImgW / 2);
					pyy = 0;
				} else if (markerImgPy == "7") {
					pyx = markerImgW / 2;
					pyy = markerImgH / 2;
				} else if (markerImgPy == "8") {
					pyx = 0;
					pyy = markerImgH / 2;
				} else if (markerImgPy == "9") {
					pyx = (0 - markerImgW / 2);
					pyy = markerImgH / 2;
				} else {
					pyx = 0;
					pyy = 0;
				}

				return {
					"pyx": pyx,
					"pyy": pyy
				};
			},
			setTitle: function (Title) {
				$(".wyxx-head-title").html(Title);

			},
			pageSwitchBack: function () {
				var mapPlugin = hook.mapPlugin;
				mapPlugin.clearGraphics();
				mapPlugin.hideInfoTemplate();
				var html = $(".metro_ul_sub").html();
				$(".metro_ul_sub").html(this.parentZttsHtml);
				this.parentZttsHtml = html;
				$(".metro_ul_sub").css("left", ($("body").width() / 2 - ($(".metro_ul_sub").width() || 594) / 2) + "px")
			},
			pageSwitch: function (measureType, dom) {
				var node = null;
				var mapPlugin = hook.mapPlugin;
				mapPlugin.clearGraphics();
				mapPlugin.hideInfoTemplate();
				var strJson = $("#xtbmZtts_" + measureType).val();
				var $this = this;
				if (measureType != "" && strJson != "" && measureType != "r" && measureType != "s") {
					var obj = eval('(' + strJson + ')');

					$(".wyxx_head .logo ").css("display", "none");
					$("#measureLi").css("display", "none");
					$("#index_zttjLi").css("display", "none");
					$("#index_setupLi").css("display", "none");
					$("#index_returnLi").css("display", "block");
					$('.wyxx-head-title').text($(dom).text());
					$(".wyxx-head-title").css("display", "block");
					$(".wyxx_fun").css("display", "none");
					$(".wyxx_bar").css("left", "0");
					$(".wyxx_bar i").addClass("closeicon");
					node = {
						id: obj.id,
						text: obj.text,
						attributes: {
							htmlColor: obj.attributes.htmlColor,
							jb: obj.attributes.jb,
							markerImgPy: obj.attributes.markerImgPy,
							markerImgPath: obj.attributes.markerImgPath,
							markerImgH: obj.attributes.markerImgH,
							markerImgW: obj.attributes.markerImgW,
							y: obj.attributes.y,
							x: obj.attributes.x
						},
						children: obj.children
					}
					z.request({
						url: "getSubZTTS.do",
						dataType: "html",
						data: {
							parentId: $("#xtbmZtts_Id_" + measureType).val()
						},
						success: function (htm) {
							if (htm && htm.replace(/ /g, "")) {
								$this.parentZttsHtml = $(".metro_ul_sub").html();
								$(".metro_ul_sub").html(htm);
								$(".metro_ul_sub").css("left", ($("body").width() / 2 - ($(".metro_ul_sub").width() || 594) / 2) + "px")
							}
						}
					});

				} else if (measureType == "s") {
					$(".wyxx_head .logo ").css("display", "none");
					$("#measureLi").css("display", "none");
					$("#index_zttjLi").css("display", "none");
					$("#index_setupLi").css("display", "none");
					$("#index_returnLi").css("display", "block");
					$('.wyxx-head-title').text($(dom).text());
					$(".wyxx-head-title").css("display", "block");
					$(".wyxx_fun").css("display", "none");
					$(".wyxx_bar").css("left", "0");
					$(".wyxx_bar i").addClass("closeicon");
					$(".index_li_hide").css("display", "block");
					$(dom).css("display", "none");
					$(".ztts").css("display", "block");
					$(".wyxx_head, .wyxx-head-title").animate({
						height: "50px",
						"line-height": "50px",
						"font-size": "32px"
					}, {
						duration: 200
					});
					$(".wyxx_head .rnav").animate({
						"margin-top": "15px"
					}, {
						duration: 200
					});
					$(".wyxx_main").animate({
						"top": "50px"
					}, {
						duration: 200,
						complete: function () {
							$(window).resize();
							hook.mapPlugin.mapObj.resize();
						}
					});

					$(".metro_ul_sub").css("bottom", "-100px").animate({
						bottom: "0px"
					}, {
						duration: 300
					});
				} else if (measureType == "r") {
					$(".wyxx_head .logo ").css("display", "block");
					$("#measureLi").css("display", "block");
					$("#index_zttjLi").css("display", "block");
					$("#index_setupLi").css("display", "block");
					$("#index_returnLi").css("display", "none");
					$('.wyxx-head-title').text("");
					$(".wyxx-head-title").css("display", "none");
					$(".wyxx_fun").css("display", "block");
					$(".wyxx_bar").css("left", "");
					$(".wyxx_bar i").removeClass("closeicon");
					$(".ztts").css("display", "none");
					$(".index_li_hide").css("display", "none");
					$("#index_jinglibushu").css("display", "block");
					$(".wyxx_head, .wyxx-head-title").css({
						height: "85px",
						"line-height": "85px",
						"font-size": "40px"
					});
					$(".wyxx_head .rnav").css({
						"margin-top": "50px"
					});
					$(".wyxx_main").css({
						"top": "50px"
					});
					$(window).resize();
					hook.mapPlugin.mapObj.resize();
				} else {
					$(".wyxx_head .logo ").css("display", "block");
					$("#measureLi").css("display", "block");
					$("#index_zttjLi").css("display", "block");
					$("#index_setupLi").css("display", "block");
					$("#index_returnLi").css("display", "none");
					$('.wyxx-head-title').text("");
					$(".wyxx-head-title").css("display", "none");
					$(".wyxx_fun").css("display", "block");
					$(".wyxx_bar").css("left", "");
					$(".wyxx_bar i").removeClass("closeicon");
					$(".ztts").css("display", "none");

					$(".wyxx_head, .wyxx-head-title").css({
						height: "85px",
						"line-height": "85px",
						"font-size": "40px"
					});
					$(".wyxx_head .rnav").css({
						"margin-top": "50px"
					});
					$(".wyxx_main").css({
						"top": "50px"
					});
					$(window).resize();
					hook.mapPlugin.mapObj.resize();
				}

				if (node != null) {
					z.plugin.MclPlugin.instance.setThemeSelect(node, true);
					node = {
						id: "",
						text: "",
						attributes: {
							htmlColor: obj.attributes.htmlColor,
							jb: obj.attributes.jb,
							markerImgPy: obj.attributes.markerImgPy,
							markerImgPath: obj.attributes.markerImgPath,
							markerImgH: obj.attributes.markerImgH,
							markerImgW: obj.attributes.markerImgW,
							y: obj.attributes.y,
							x: obj.attributes.x
						},
						children: obj.children
					}
					if (obj.attributes.name != "" || obj.attributes.code != "" || obj.attributes.jc != "") {
						z.plugin.MclPlugin.instance.showTheme(node, obj.attributes.name, obj.attributes.code, obj.attributes.jc);
					}

				}

			},
			showViewDialog: function (type, id) {
				if (window.parent && window.parent.zZFPlugin) {
					window.parent.zZFPlugin[type](id);
				} else if (zZFPlugin) {
					zZFPlugin[type](id);
				} else {
					z.uri.setJs(window.WEB_ROOT_PATH + "/lib/z-qzyj/z.plugin.ZFPlugin.js", function () {
						zZFPlugin[type](id);
					});
				}
			},
			addDirectArea: function (point, radius) {
				mapPlugin.removeGraphics("directLeayer");
				var directPoint = mapPlugin.addPoint("directLeayer", point, {
					"color": [
							51, 133, 255, 255
					],
					"size": 8,
					"type": "esriSMS",
					"style": "esriSMSCircle",
					"outline": {
						"color": [
								45, 120, 244, 255
						],
						"width": 1,
						"type": "esriSLS",
						"style": "esriSLSSolid"
					}
				})
				mapPlugin.setCenter(point, 12);
				var directCircle;
				require([
						"esri/geometry/Circle", "esri/units"
				], function (Circle, Units) {
					directCircle = mapPlugin.addPolygon("directLeayer", new Circle({
						center: directPoint.geometry,
						radius: (radius && typeof (radius) == "number") ? radius : 1000,
						radiusUnit: Units.METERS
					}), {
						"type": "esriSFS",
						"style": "esriSFSSolid",
						"color": [
								45, 120, 244, 50
						],
						"outline": {
							"color": [
									45, 120, 244, 255
							],
							"width": 1,
							"type": "esriSLS",
							"style": "esriSLSSolid"
						}
					});

					var graphic;
					var layerName = "trackobjectPointLayer";
					var point = [];
					if (mapPlugin.graphicsLayers[layerName]) {
						graphics = mapPlugin.graphicsLayers[layerName].graphics;
						$.each(graphics, function (i, e) {
							if (directCircle.geometry.contains(e.geometry)) {
								point.push(e);
							}
						})

						zMapElementParse.task_view(point, true);
					}
				});

			}

		});

		z.getInstance("z.plugin.MclPlugin", null, "zMclPlugin");
	}
})(window, z, z.plugin, $);